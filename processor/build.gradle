/*
 * Copyright (c) 2017 Dragan Zuvic
 *
 * This file is part of jtsgen.
 *
 * jtsgen is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * jtsgen is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with jtsgen.  If not, see http://www.gnu.org/licenses/
 *
 */

import org.gradle.internal.jvm.Jvm

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'
apply plugin: 'idea'
apply plugin: 'com.jfrog.bintray'

description="The jtsgen annotation processor"

configurations {
    apt
}

def aptOutDir="${projectDir}/src/main/generated"
def aptOutTestDir="${buildDir}/apt/test/java"

dependencies {
    api project(':annotations')

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "com.google.testing.compile:compile-testing:0.10"
    testCompile "org.mockito:mockito-core:2.7.21"
    testCompile "commons-io:commons-io:2.5"
    testCompile 'com.google.guava:guava:21.0'
    

    apt "org.immutables:value:2.5.3" // for annotation processor
//    apt 'org.immutables:value-processor:2.5.3'
    implementation "org.immutables:value:2.5.3" // for annotations
    implementation "org.immutables:builder:2.5.3" // for annotations
    
    compileOnly  files(Jvm.current().toolsJar)

    runtime files(Jvm.current().toolsJar)
}


sourceSets.main.java.srcDirs = [aptOutDir,'src/main/java']

idea {
    module {
        generatedSourceDirs += file(aptOutDir)
    }
}

compileJava {
    options.annotationProcessorPath = configurations.apt
    options.compilerArgs << "-s" << aptOutDir
    doFirst {
        mkdir(aptOutDir)
    }
}

clean {
    delete aptOutDir
}

task sourceJar(type: Jar) {
  from sourceSets.main.allJava
  classifier "sources"
}

def pomConfig = {
    url 'https://github.com/dzuvic/jtsgen'
    inceptionYear '2016'
    scm { url "https://github.com/dzuvic/jtsgen.git" }
    licenses {
        license {
            name "GNU GENERAL PUBLIC LICENSE, Version 3"
            url 'https://www.gnu.org/licenses/gpl-3.0.txt'
            distribution 'repo'
        }
    }
    developers {
        developer {
            id 'dzuvic'
            name 'Dragan Zuvic'
            url 'https://github.com/dzuvic'
            email 'zuvic@w11k.de'
            roles { role 'Developer' }
        }
    }
}


bintray {
    user = project.hasProperty('bintray.user') ? project.property('bintray.user') : System.getenv('BINTRAY_USER')
   	key = project.hasProperty('bintray.apikey') ? project.property('bintray.apikey') : System.getenv('BINTRAY_API_KEY')
    publications = ['release']
    dryRun = false
    override = false
    pkg {
        repo = 'jtsgen'
        name = project.name
        licenses = ['GPL-3.0']
        vcsUrl = 'https://github.com/dzuvic/jtsgen.git'
        issueTrackerUrl = 'https://github.com/dzuvic/jtsgen/issues'
        desc = project.description
        version {
                name = project.version
                released  = new Date()
                vcsTag = project.version
            }
    }
}


publishing {
	publications {
		release(MavenPublication) {
			from components.java
            artifact sourceJar
            artifactId 'jtsgen-processor'
            pom.withXml {
            			                def root = asNode()
            			                root.appendNode('description', description)
            			                root.appendNode('name', project.name)
            			                root.children().last() + pomConfig
            			            }
		}

	}
}
