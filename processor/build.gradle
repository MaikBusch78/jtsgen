/*
 * Copyright (c) 2017 Dragan Zuvic
 *
 * This file is part of jtsgen.
 *
 * jtsgen is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * jtsgen is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with jtsgen.  If not, see http://www.gnu.org/licenses/
 *
 */

import org.gradle.internal.jvm.Jvm

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'jacoco'
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'

description="The jtsgen annotation processor"

configurations {
    apt
}

def aptOutDir="${projectDir}/src/main/generated"
def aptOutTestDir="${projectDir}/src/test/generated"

dependencies {
    api project(':annotations')

    // JUnit 5 Jupiter
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiter_Version}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiter_Version}")
    testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')
    testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatform_Version}")

    testCompile "com.google.testing.compile:compile-testing:${compile_testing_Version}"
    testCompile "org.mockito:mockito-core:${mockito_Version}"
    testCompile "commons-io:commons-io:${commons_io_Version}"
    testCompile "com.google.guava:guava:${guava_Version}"
    testCompile "com.github.mifmif:generex:${generex_Verson}"
    

    apt "org.immutables:value:${immutables_Version}" // for annotation processor
//    apt 'org.immutables:value-processor:2.5.3'
    implementation "org.immutables:value:${immutables_Version}" // for annotations
    implementation "org.immutables:builder:${immutables_Version}" // for annotations
    
    compileOnly  files(Jvm.current().toolsJar)

    runtime files(Jvm.current().toolsJar)
}


sourceSets.main.java.srcDirs = [aptOutDir,'src/main/java']

idea {
    module {
        generatedSourceDirs += file(aptOutDir)
    }
}

compileJava {
    options.annotationProcessorPath = configurations.apt
    options.compilerArgs << "-s" << aptOutDir
    options.compilerArgs += '-parameters'
    options.verbose = false
    doFirst {
        delete aptOutDir  // workaround for Bug https://github.com/immutables/immutables/issues/134
        mkdir(aptOutDir)
    }
}


junitPlatform {
    // platformVersion '1.0.3'
    filters {
        engines {
            include 'junit-jupiter'
        }
        tags {
            exclude 'slow'
        }
        // includeClassNamePattern '.*Test'
    }
    // configurationParameter 'junit.jupiter.conditions.deactivate', '*'
    // enableStandardTestTask true
    // reportsDir file('build/test-results/junit-platform') // this is the default
    // logManager 'org.apache.logging.log4j.jul.LogManager'
}

clean {
    delete aptOutDir
}


jacocoTestReport {
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    // exclude generated sources
                    '/dz/jtsgen/processor/dsl/model/TSMappedTerminalBuilder*',
                    '/dz/jtsgen/processor/dsl/model/TSMappedTypeContainerBuilder*',
                    '/dz/jtsgen/processor/dsl/model/TSMappedTypeVarBuilder*',
                    '/dz/jtsgen/processor/dsl/model/TypeMappingExpressionBuilder*',
                    '/dz/jtsgen/processor/dsl/parser/TokenBuilder*',
                    '/dz/jtsgen/processor/jtp/conv/TSProcessingInfoBuilder*',
                    '/dz/jtsgen/processor/model/NameSpaceMappingBuilder*',
                    '/dz/jtsgen/processor/model/TSEnumBuilder*',
                    '/dz/jtsgen/processor/model/TSEnumMemberBuilder*',
                    '/dz/jtsgen/processor/model/TSInterfaceBuilder*',
                    '/dz/jtsgen/processor/model/TSModuleInfoBuilder*',
                    '/dz/jtsgen/processor/model/TSRegularMemberBuilder*'
            ] )
        })
    }
}

apply from: "${rootDir}/gradle/publish.gradle"

uploadArchives {
    repositories {
        mavenDeployer {

            pom.project {
                name 'JTSGEN Annotation Processor'
                packaging 'jar'
                artifactId archivesBaseName
                description 'The Annotation an other Types for the jtsgen annotation processor'
                url 'http://jtsgen.readthedocs.io'

                scm {
                    connection 'scm:git:https://github.com/dzuvic/jtsgen.git'
                    developerConnection 'scm:git:https://github.com/dzuvic/jtsgen.git'
                    url 'https://github.com/dzuvic/jtsgen.git'
                }

                licenses {
                    license {
                        name 'GNU General Public License (GPL) version 3.0'
                        url 'https://www.gnu.org/licenses/gpl-3.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'dzuvic'
                        name 'Dragan Zuvic'
                        email 'git.zuvic@posteo.de'
                    }
                }
            }
        }
    }
}

